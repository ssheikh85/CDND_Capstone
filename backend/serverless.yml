service:
  name: serverless-journal-app

plugins:
  - serverless-webpack
  - serverless-iam-roles-per-function
  - serverless-reqvalidator-plugin
  - serverless-plugin-tracing
  - serverless-dynamodb-local
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}

  tracing: true

  environment:
    ENTRIES_TABLE: Entries-${self:provider.stage}
    ENTRIES_INDEX: entryIdIndex
    FILES_S3_BUCKET: serverless-journal-files-47hyt-${self:provider.stage}
    SIGNED_URL_EXPIRATION: 300
    JWKS_ENDPOINT: https://dev-rf-u05fp.auth0.com/.well-known/jwks.json

custom:
  serverless-offline:
    port: 3003

  dynamodb:
    start:
      port: 8000
      inMemory: true
      migrate: true

functions:
  # Entries:
  #   handler: lambda/entriesServer.entriesHandler
  #   events:
  #     - http:
  #         method: get
  #         path: entries
  #         cors: true
  #     - http:
  #         method: post
  #         path: entries
  #         cors: true
  #         reqValidatorName: RequestBodyValidator
  #     - http:
  #         method: put
  #         path: entries
  #         cors: true
  #         reqValidatorName: RequestBodyValidator
  #     - http:
  #         method: delete
  #         path: entries
  #         cors: true
  # - http:
  #     method: put
  #     path: entries
  #     cors: true
  # iamRoleStatements:
  #   - Effect: Allow
  #     Action:
  #       - dynamodb:Query
  #     Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.ENTRIES_TABLE}
  #   - Effect: Allow
  #     Action:
  #       - dynamodb:PutItem
  #     Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.ENTRIES_TABLE}
  #   - Effect: Allow
  #     Action:
  #       - dynamodb:UpdateItem
  #     Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.ENTRIES_TABLE}
  #   - Effect: Allow
  #     Action:
  #       - dynamodb:DeleteItem
  #     Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.ENTRIES_TABLE}
  #   - Effect: "Allow"
  #     Action:
  #       - "xray:PutTraceSegments"
  #       - "xray:PutTelemetryRecords"
  #     Resource:
  #       - "*"
  #Local Dev environment
  Local:
    handler: lambda/entriesServerLocal.entriesHandlerLocal
    events:
      - http:
          method: get
          path: local
          cors: true
      - http:
          method: post
          path: local
          cors: true
          reqValidatorName: RequestBodyValidator
      - http:
          method: put
          path: local
          cors: true
          reqValidatorName: RequestBodyValidator
      - http:
          method: delete
          path: local
          cors: true
      # - http:
      #     method: put
      #     path: local
      #     cors: true
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Query
        Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.ENTRIES_TABLE}
      - Effect: Allow
        Action:
          - dynamodb:PutItem
        Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.ENTRIES_TABLE}
      - Effect: Allow
        Action:
          - dynamodb:UpdateItem
        Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.ENTRIES_TABLE}
      - Effect: Allow
        Action:
          - dynamodb:DeleteItem
        Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.ENTRIES_TABLE}

resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: AWS::ApiGateway::GatewayResponse
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
          gatewayresponse.header.Access-Control-Allow-Methods: "'GET,OPTIONS,POST,PUT,DELETE'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: ApiGatewayRestApi

    EntriesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: createdAt
            AttributeType: S
          - AttributeName: entryId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
          - AttributeName: createdAt
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:provider.environment.ENTRIES_TABLE}
        LocalSecondaryIndexes:
          - IndexName: ${self:provider.environment.ENTRIES_INDEX}
            KeySchema:
              - AttributeName: userId
                KeyType: HASH
              - AttributeName: entryId
                KeyType: RANGE
            Projection:
              ProjectionType: ALL

    RequestBodyValidator:
      Type: AWS::ApiGateway::RequestValidator
      Properties:
        Name: "request-body-validator"
        RestApiId:
          Ref: ApiGatewayRestApi
        ValidateRequestBody: true
        ValidateRequestParameters: false

    FilesBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.environment.FILES_S3_BUCKET}
        CorsConfiguration:
          CorsRules:
            - AllowedOrigins:
                - "*"
              AllowedHeaders:
                - "*"
              AllowedMethods:
                - GET
                - PUT
                - POST
                - DELETE
                - HEAD
              MaxAge: 3000

    BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        PolicyDocument:
          Id: MyPolicy
          Version: "2012-10-17"
          Statement:
            - Sid: PublicReadForGetBucketObjects
              Effect: Allow
              Principal: "*"
              Action:
                - "s3:GetObject"
                - "s3:PutObject"
              Resource: "arn:aws:s3:::${self:provider.environment.FILES_S3_BUCKET}/*"
        Bucket: !Ref FilesBucket
